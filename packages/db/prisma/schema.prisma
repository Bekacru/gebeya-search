generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Shop {
    id          String   @id //this will use the orgnial id from telegram
    title       String
    description String?
    metadata    Json?
    image       String
    link        String?
    type        ShopType
    createdAt   DateTime @default(now()) @map("created_at")
    updatedAt   DateTime @default(now()) @map("updated_at")

    Product Product[]
}

model Product {
    id              String   @id
    createdAt       DateTime @default(now()) @map("created_at")
    title           String
    description     String
    descriptionHash String   @map("description_hash")
    metadata        Json?
    categoryId      String
    price           Int      @default(0)
    phoneNumber     String?  @map("phone_number")
    productLink     String   @default("t.me") @map("product_link")
    channelId       String   @map("channel_id")
    updatedAt       String?  @default("2022-08-09 20:08:56.124503") @map("updated_at")
    available       Boolean  @default(true)

    Shop     Shop            @relation(fields: [channelId], references: [id], onDelete: Cascade, onUpdate: NoAction)
    Category Category        @relation(fields: [categoryId], references: [id])
    Images   ProductImages[]

    @@unique([descriptionHash])
    @@index([channelId, categoryId])
}

model Category {
    id        String    @id @default(cuid())
    title     String
    createdAt DateTime  @default(now())
    updatedAt DateTime  @default(now())
    Product   Product[]
}

model ProductImages {
    id        String  @id
    productId String
    url       String
    isPrimary Boolean @default(false)
    Product   Product @relation(fields: [productId], references: [id])

    @@unique([url])
    @@index([productId])
}

enum ShopType {
    TelegramGroup
    TelegramChannel
}
